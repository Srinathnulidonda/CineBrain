You are a Principal Frontend Architect at a Fortune 100+ streaming company tasked with building CineBrain — a premium movie, TV series and anime recommendation platform that must outperform Netflix, Disney+, and HBO Max in user experience, performance, and technical excellence. based on the backend/app.py 
provide only this files only


frontend/
├── index.html                          # Public landing page and user personlize if login
├── components/                         # Reusable widgets
│   ├── cards/
│   │   ├── content-card.html           # Standard content card (Bootstrap + Tailwind)
│   │   └── card-mini.html              # Compact card variant
│   ├── ui/
│   │   ├── rating-badge.html           # Rating display component
│   │   ├── type-badge.html             # Content type badge
│   │   ├── genre-chips.html            # Genre tags with Tailwind utilities
│   │   └── search-bar.html             # Search component with Bootstrap form controls
│   ├── layout/
│   │   ├── topbar.html                 # Desktop navigation (Bootstrap navbar + Tailwind styling)
│   │   └── mobile-nav.html             # Mobile bottom nav (custom with Tailwind)
│   └── modals/
│       ├── trailer-modal.html          # Video player modal (Bootstrap modal + custom styling)
│       └── filter-modal.html           # Advanced filters
├── content/                            # Content discovery
│   ├── search.html                     # Global search
│   └── details.html                    # Movie/Show details
└── css/                                # ⚠️ Only 6 CSS files (global)
    └── components.css                  # Component styles (Bootstrap overrides + Tailwind components)
🔧 DEVELOPMENT WORKFLOW REQUIREMENT
CRITICAL: Components-First Approach
Before generating any full pages, you MUST always provide the reusable component HTML files first with real-time integration and inline JavaScript inside them.
This is a mandatory development sequence:
1.	FIRST: Generate all reusable components with full functionality
2.	THEN: Generate the complete pages that use these components
3.	ENSURE: Each component works independently with real backend data

Bootstrap 5 foundation + Tailwind utility polish + cinematic blue-purple tokens + zero placeholders (real backend: https://backend-app-970m.onrender.com/api).
🖼 Branding
•	Title (always visible, desktop & mobile): CineBrain
•	Tagline (always below the title, responsive): The Mind Behind Your Next Favorite
o	Font scales by breakpoint: text-xs on mobile → text-sm on tablets → text-base on desktop
________________________________________


🔝 Fixed Navigation Architecture
Fixed Topbar (Mobile & Desktop)
•	Fixed position: Always pinned at the top across all breakpoints using Bootstrap’s fixed-top + Tailwind positioning
•	Bootstrap Navbar structure: Use navbar component as foundation
•	Element Order (Left → Right):
o	Logo & Tagline (stacked vertically with responsive text):
o	<div class="navbar-brand flex flex-col items-start">
o	  <div class="logo fw-bold text-primary text-xl md:text-2xl">CineBrain</div>
o	  <div class="tagline text-muted text-xs sm:text-sm md:text-base">The Mind Behind Your Next Favorite</div>
o	</div>
o	Font scales by breakpoint: text-xs on mobile → text-sm on tablets → text-base on desktop
o	Tagline (always below the title, responsive): The Mind Behind Your Next Favorite
o	Search Component (Expandable Search Icon → Search Bar) : Bootstrap form controls + Tailwind styling for autocomplete
• By default, only a search icon is visible on mobile.
• On click/tap, the search icon expands into a full-width search bar with smooth animation.
• On desktop, the search bar is always visible (no expansion needed).
• Uses Tailwind transitions for smooth expand/collapse.
o	User Avatar: Real-time avatar with Bootstrap utilities + Tailwind customization
o	User Avatar Dropdown (Mobile & Desktop)
- Right Section
    - Public: Login | Sign Up buttons (purple filled, blue outline hover)
    - Logged-in: User avatar dropdown (Profile | Settings | Logout)
- Backend:
    - GET /api/auth/status → login state
    - GET /api/user/profile → avatar + name
Avatar shown in top-right of navbar.
On click/tap, dropdown opens with the following items:
Activity, Favorites, Profile, Settings, Watchlist, Logout
Dropdown should be styled with Tailwind utilities (rounded corners, shadow, hover effects).
Close when clicking outside 
Works consistently across mobile and desktop
Fixed Bottom Navigation (Mobile Only)
•	Bootstrap-free zone: Custom Tailwind-only implementation
•	Fixed position: fixed bottom-0 inset-x-0 with correct z-index
•	5 Primary Tabs: Home, Search, Watchlist, Favorites, Profile
•	Safe area handling: iOS/Android notch adaptation with Tailwind spacing utilities
•	Haptic feedback: JavaScript-based mobile touch interactions

Layout Structure
•	Single Line: All three elements (logo, search, avatar) are now perfectly aligned in one horizontal line on mobile
•	Responsive: Automatically adapts between mobile single-line and desktop expanded layout
•	Proper Spacing: Optimized spacing between elements for better touch targets
________________________________________
📱 COMPONENT REQUIREMENTS WITH BOOTSTRAP + TAILWIND
Component Development Rules (MANDATORY FIRST STEP)
Each component .html must:
•	Bootstrap Structure: Use appropriate Bootstrap components as foundation
•	Tailwind Styling: Apply Tailwind utilities for design customization
•	Real Backend Data: Fetch from https://backend-app-970m.onrender.com/api
•	Zero Placeholders: All content must be authentic and live
1. Page Structure & Layout
•	Overall grid:
o	Bootstrap container-fluid + row for responsive layout.
o	Tailwind utilities (flex, grid, gap, rounded-2xl, shadow-xl) for polish.
•	Theme:
o	Primary color (blue-600 → blue-900 gradient) for rarity.
o	Accent color (purple-500 → purple-800 gradient) for royalty.
o	Background: dark cinematic gradient (slate-900 → indigo-950).
o	Typography: Sans-serif clean font (Tailwind font-sans, weight mix of semibold & bold).
o	Motion: Subtle fade/slide-in animations (Framer Motion or CSS).
________________________________________
2. Header / Navigation
Position: Sticky top, spans full width.
•	Brand Logo (left):
o	CineBrain logotype (blue-to-purple gradient text).
o	Always links to /.
•	Nav Links (center, for public):
o	“Movies” → /movies
o	“Series” → /series
o	“Anime” → /anime
o	“About” → /about
•	Personalized Nav (if logged in):
o	Replace “About” with “My List” → /my-list.
o	“For You” → /dashboard.
•	Right Side (CTA / User):
o	If public: Login + Sign Up buttons (purple-filled, blue-outline hover).
o	If logged in: user avatar dropdown with: Profile, Settings, Logout.
🔗 Backend integration:
•	GET /api/auth/status → decide if user logged in.
•	GET /api/user/profile → fetch avatar + name.
________________________________________
3. Hero Section (Top Banner)
Purpose: First cinematic punch.
•	Background: Full-bleed video or poster image fetched from trending API.
•	Overlay: Gradient overlay (from-slate-900/70 to-indigo-900/70).
•	Content (left-aligned, center-vertical):
o	Title → Featured Movie/Show (/api/trending?limit=1).
o	Short tagline → fetched from backend description.
o	Primary CTA (Play Now) → /content/:id (blue solid).
o	Secondary CTA (Add to List) → POST /api/user/list.
UX polish: text fades in with slight motion.
________________________________________
4. Content Carousels (Dynamic Sections)
Cinematic horizontal scrollable rows. Each carousel is a Bootstrap row styled with Tailwind.
•	For Public Visitors:
o	“Trending Now” → /api/trending?type=all
o	“Top Rated Movies” → /api/movies/top
o	“Top Rated Series” → /api/series/top
o	“Anime Highlights” → /api/anime/top
•	For Logged-in Users (Personalized):
o	“Because You Watched X” → /api/recommendations/user/:id
o	“Continue Watching” → /api/user/continue
o	“Trending Near You” → /api/trending?region=user.location
o	“Curated for You” → /api/recommendations/personalized
Card design (for each movie/series/anime):
•	Poster (rounded-2xl, shadow).
•	Hover state → reveals: Title, runtime, rating.
•	Play button overlay (centered).
Performance:
•	Lazy-load images (loading="lazy").
•	Preload JSON via API prefetch for snappy scroll.
________________________________________
7. Performance & UX Notes
•	Backend live fetch: All data pulled from https://backend-app-970m.onrender.com/api.
•	Zero placeholders: real titles, posters, user data always.
•	Preload strategy: critical carousels (Trending + Personalized) preloaded during Hero fetch.
•	Accessibility: ARIA labels on buttons, semantic HTML5.
•	Motion: subtle transitions only (avoid distraction).
•	Mobile-first:
o	Hero collapses into stacked content.
o	Carousels → swipeable with touch support.

Header (Sticky Top)
---------------------------------
[Topbar]

Hero Section (Top Banner)
---------------------------------
[Full-bleed Video / Poster Image]
- Gradient overlay: from-slate-900/70 → indigo-900/70
[Hero Content - left-aligned, vertically centered]
- Title: Featured Movie/Show (GET /api/trending?limit=1)
- Tagline: Description from backend
- Primary CTA: Play Now → /content/:id (blue solid button)
- Secondary CTA: Add to List → POST /api/user/list
- Subtle fade/slide-in animation
- No placeholders 
Content Carousels (Dynamic Rows)
---------------------------------
[Public Carousels]
- Trending Now → /api/trending?type=all
- Top Rated Movies → /api/movies/top
- Top Rated Series → /api/series/top
- Anime Highlights → /api/anime/top
- New Releases
- Critics' Choice

[Card Design – Each Item]
- Poster (rounded-2xl, shadow-xl)
- Hover overlay: Title | Runtime | Rating
- Play button overlay (center)
- Lazy-load images
- Preload JSON for critical carousels


Footer
---------------------------------
- Left: CineBrain © 2025
- Center: Privacy | Terms | Contact
- Right: Social media icons
- Slate background, white text, hover transitions

Performance & UX Notes
---------------------------------
- Backend live fetch: all content from https://backend-app-970m.onrender.com/api
- Zero placeholders: real titles, posters, user data
- Preload critical APIs: Hero + top carousels
- Accessibility: ARIA labels, semantic HTML5
- Subtle motion only (fade/slide)
- Mobile-first:
    - Hero collapses stacked
    - Carousels swipeable on touch


details.html (Content Details Page)
1️⃣ Purpose

Show detailed info for a single movie/TV/anime.

Allow interaction: play trailer, add to watchlist/favorites, read reviews, explore cast/crew, browse gallery.

Serve as the hub linking recommendation rails and personalization features.

2️⃣ Wireframe / Layout

Header (Fixed Top)

[Topbar]
---------------------------------
[Hero Image + Title + Badges + CTA buttons]
---------------------------------
[Watch Progress Bar / Resume]
---------------------------------
[Synopsis / Genres / Type Badges / Rating]
---------------------------------
[Cast & Crew Carousel / Grid]
---------------------------------
[Media Gallery / Trailer Modal]
---------------------------------
[User Reviews + Review Form]
---------------------------------
[Related / Similar Content Rails]
---------------------------------
[Footer]