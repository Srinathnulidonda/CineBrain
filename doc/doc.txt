You are a Principal Frontend Architect at a Fortune 100+ streaming company tasked with building CineScope — a premium movie, tv series and anime recomendation platform that must outperform Netflix, Disney+, and HBO Max in user experience, performance, and technical excellence, based on backend/app.py.

📂 Project Structure (Mandatory)
frontend/
├── index.html                          # Public landing page
├── vercel.json                         # Deployment configuration│
├── auth/                               # Authentication pages
│   ├── login.html                      # Login form
│   ├── register.html                   # Registration form
│   └── forgot-password.html            # Password recovery
│
├── content/                            # Content discovery
│   ├── search.html                     # Global search
│   ├── details.html                    # Movie/Show details
│   ├── anime.html                      # Anime category
│   ├── genre.html                      # Genre browsing
│   ├── regional.html                   # Regional content
│   └── trending.html                   # Trending content
│
├── user/                               # User-specific pages
│   ├── profile.html                    # User profile /{username}/profile
│   ├── watchlist.html                  # Personal watchlist
│   ├── favorites.html                  # Favorite content
│   ├── activity.html                   # Watch history
│   └── settings.html                   # User preferences AND activity + subscription
│
├── admin/                              # Admin dashboard
│   ├── index.html                      # Admin overview
│   ├── content.html                    # Content management,ML recommendations, Admin post in Telegram
│   ├── users.html                      # User management
│   └── analytics.html                  # Usage analytics
│
├── components/                         # Reusable widgets
│   ├── cards/
│   │   ├── content-card.html           # Standard content card
│   │   └── card-mini.html           
│   ├── ui/
│   │   ├── rating-badge.html           # Rating display
│   │   ├── type-badge.html             # Content type badge
│   │   ├── genre-chips.html            # Genre tags
│   │   └── search-bar.html             # Search component
│   ├── layout/
│   │   ├── topbar.html                 # Desktop navigation
│   │   ├── mobile-nav.html             # Mobile bottom nav
│   │   └── footer.html                 # Site footer
│   └── modals/
│       ├── trailer-modal.html          # Video player modal
│       └── filter-modal.html           # Advanced filters
│
├── js/                                 # ⚠️ Only 4 JS files (global)
│   ├── config.js                       # BASE_URL + API_ENDPOINTS map (no placeholders)
│   ├── api.js                          # HTTP client, retries, caching, SW hooks
│   ├── auth.js                         # JWT auth, refresh, username routing
│   └── app.js                          # Router, boot, page controllers, perf marks, Components, carousels, toasts, virtualization
│
└── css/                                # Stylesheets,Above-the-fold styles (preloaded) critical, Helper classes utilities
    ├── main.css                        # Global styles
    ├── components.css                  # Component styles
    ├── layouts.css                     # Layout-specific styles
    ├── animations.css                  # Transitions & keyframes
    ├── responsive.css                  # Breakpoints (mobile-first)
    └── theme.css                       # Dark/Light toggle + cinematic tokens
________________________________________
🔝 Fixed Topbar (Mobile & Desktop)
    Fixed Position: Always pinned to the top across all breakpoints.
    Element Order (Left → Right):
    Logo (CineScope) → Clickable, routes to / (landing).
    Search Icon/Input → Expands into search bar with real-time backend autocomplete.
    User Avatar → Real-time avatar (via ui-avatars) that updates with username dynamically.
    No Zoom Hacks / No CSS Workarounds → Must be truly fixed.
📱 Fixed Bottom Navigation (Mobile Only)
Fixed Position: Always pinned to the bottom of the viewport on mobile.
5 Primary Tabs (with haptic feedback):
    Home
    Search
    Watchlist
    Favorites
    Profile
    Safe Area Handling: Must adapt perfectly for iPhone 14/15 Pro notches and Android cutouts.
Gesture Support: Swipe navigation + pull-to-refresh + infinite scroll.
________________________________________
🏠 HOMEPAGE (NON-LOGGED USERS)
    Hero Section: Show real trending movie, auto-rotate every 5s, backdrop 16:9, play/info/add-to-list buttons, preload images.
    "What's Hot": Horizontal scrolling cards with real posters, titles, ratings with real data & local titles.
    Genres: Sections for Action, Comedy, Drama, Thriller, Romance, Sci-Fi with lazy loading & trailer preview.
    Regional Favorites: Telugu, Hindi, Tamil, Kannada movies with real data & local titles.
    Critics’ Choice: Premium curated content with real critic scores & reviews with real data & local titles.
    User Favorites: Community-driven popular content with real user ratings.
    Search: Auto-suggest with posters, real-time results, filters for genre, year, cast, crew with real data & local titles. 
    Theme: Dark/Light mode toggle, Netflix-inspired design.

🏠 PERSONALIZED HOMEPAGE (LOGGED-IN USERS)
    Recommended for You: Real ML-powered suggestions with confidence scores.
    Personalized recommendations according to user and Real ML-powered suggestions
    Because You Liked [X]: Similar content based on user’s past likes.
    Continue Watching: Resume from last watched point with real progress.
    From Your Wishlist: Show wishlist items with availability and scores.
    Trending in Your Genres: Personalized trending based on user preferences.
    Personalized Hero: Rotates content from user’s favorite genres, adapts to time & behavior.

🎬 DETAIL PAGE (ALL USERS)
    Hero Section: Real movie data with title, overview, poster, backdrop.
    Trailer Player: Real trailers, autoplay logic, adaptive quality, custom controls.
    Synopsis: Real overview, plot summary, and warnings.
    Cast & Crew: Real actor names, roles, profile images, filmography links.
    Ratings: IMDB, Rotten Tomatoes, user reviews, backend composite score.
    Metadata: Genres, advisories, 4K/HDR status, release dates.
    More Like This: Similar movies section with real discovery.
    Lists: Add/remove from Watchlist & Favorites.
    Reviews: Real user reviews with spoiler tags and helpful votes.
    Gallery: Real posters, stills, and behind-the-scenes images.
________________________________________
🚨 CRITICAL MANDATE: ZERO PLACEHOLDER POLICY
ABSOLUTE REQUIREMENTS - NO EXCEPTIONS:
•	NO PLACEHOLDER DATA: Every piece of content must come from real backend API calls
•	NO MOCK DATA: All movie titles, descriptions, images, ratings must be fetched from https://backend-app-970m.onrender.com/api
•	NO STATIC CONTENT: Every card, every list, every recommendation must be dynamically populated
•	NO FAKE IMAGES: All posters, backdrops, and thumbnails must be real URLs from the backend
•	NO DUMMY TEXT: All descriptions, reviews, cast information must be authentic data
•	REAL-TIME DATA: Every page load must make actual API calls and display live data
•	PRODUCTION-READY: The frontend must work seamlessly with the existing backend without any modifications
BACKEND INTEGRATION REQUIREMENTS:
javascript
// MANDATORY: All data must come from these real endpoints
const API_ENDPOINTS = {
  BASE_URL: 'https://backend-app-970m.onrender.com/api',
  // Content Discovery
  TRENDING: ,POPULAR: , TOP_RATED: ,REGIONAL: , GENRES: ,
  // Search & Filtering
  SEARCH: ,FILTER: ,AUTOCOMPLETE: ,
  // Content Details
  MOVIE_DETAILS: ,TV_DETAILS: ,SIMILAR: ,CAST_CREW: ,REVIEWS: ,
  // User Features (Authenticated)
  RECOMMENDATIONS: ,  WATCHLIST: ,  FAVORITES: ,  WATCH_HISTORY: ,USER_RATINGS: ,
  // Authentication
  LOGIN: ,  REGISTER: ,  REFRESH_TOKEN: ,  LOGOUT:,
};

// EVERY component must fetch real data
const fetchRealData = async (endpoint, params = {}) => 
________________________________________
🏆 SUCCESS METRICS (Non-Negotiable)
Performance Benchmarks
•	First Contentful Paint: <1.2s (beat Netflix's 1.8s)
•	Largest Contentful Paint: <2.1s (beat Disney+'s 2.8s)
•	Time to Interactive: <2.5s (beat HBO Max's 3.2s)
•	Core Web Vitals: 100% green scores
•	Lighthouse Performance: ≥95 across all pages
User Experience Standards
•	Zero placeholder content - every component must be production-ready with real data
•	Sub-200ms interaction responses - faster than human perception threshold
•	Buttery smooth 60fps animations on all devices
•	One-tap navigation - maximum 2 taps to reach any content
•	Instant search results with <100ms autocomplete using real backend data
________________________________________
🎨 CINEMATIC DESIGN PHILOSOPHY
Brand Identity: "Premium IMAX Experience"
Create the digital equivalent of a luxury cinema experience - sophisticated, immersive, and premium.
Color Psychology & Hierarchy
css
/* Tier 1: Foundation (Premium Black) */
--cinema-black: #0a0a0b;        /* Main backgrounds - conveys luxury */
--theater-dark: #141418;         /* Card surfaces - premium feel */
--velvet-dark: #1e1e23;          /* Elevated content - sophisticated */

/* Tier 2: Premium Accents */
--platinum-blue: #3b82f6;        /* Trust & reliability */
--royal-purple: #8b5cf6;         /* Exclusivity & premium */
--vip-gold: #f59e0b;            /* Premium features & highlights */

/* Tier 3: Content Hierarchy */
--hero-gradient: linear-gradient(135deg, #3b82f6 0%, #8b5cf6 50%, #1e1e23 100%);
--premium-glow: 0 0 30px rgba(139, 92, 246, 0.3);
--interactive-pulse: 0 0 20px rgba(59, 130, 246, 0.4);
Visual Hierarchy Rules
1.	Hero Content: Cinematic 16:9 ratio with subtle parallax
2.	Content Cards: Sharp corners (4px), premium shadows, hover scaling (1.03x)
3.	Typography: Ultra-clean hierarchy with perfect contrast ratios
4.	Micro-interactions: Sophisticated 0.2s cubic-bezier(0.4, 0, 0.2, 1) transitions
________________________________________
📱 MOBILE-FIRST ARCHITECTURE
Fixed Navigation System (Critical Requirement)
•	Top Bar (Fixed): Search, profile, notifications - always accessible
•	Bottom Navigation (Fixed): 5 primary tabs with haptic feedback
•	Safe Area Handling: Perfect iPhone 14/15 Pro notch adaptation
•	Gesture Support: Swipe navigation, pull-to-refresh, infinite scroll
Responsive Breakpoints (Performance Optimized)
css
/* Mobile-First Strategy */
@media (max-width: 575px)   { /* Mobile: Optimized for thumb navigation */ }
@media (min-width: 576px)   { /* Large Mobile: Enhanced touch targets */ }
@media (min-width: 768px)   { /* Tablet: Hybrid touch/cursor interface */ }
@media (min-width: 992px)   { /* Desktop: Full-featured experience */ }
@media (min-width: 1400px)  { /* Ultra-wide: Cinematic layouts */ }
________________________________________
⚡ PERFORMANCE ARCHITECTURE
5-File JavaScript Strategy (Mandatory)
javascript
// 1. config.js (50KB) - App configuration & API endpoints
// 2. api.js (75KB) - HTTP client, real backend integration, caching
// 3. auth.js (60KB) - Real authentication with backend JWT
// 4. ui.js (120KB) - All UI components with real data binding
// 5. app.js (80KB) - Main application logic with real routing
Total Bundle: ~385KB (compressed: ~95KB with Brotli)
Preload Strategy: All 5 files loaded in parallel during initial paint
Critical Performance Optimizations
•	Preload Critical Resources: All 5 JS files + critical CSS
•	Image Optimization: Real backend image URLs with WebP/AVIF lazy loading
•	API Response Caching: Real backend data cached for 30s dynamic, 24h static
•	Service Worker: Aggressive caching of real API responses
•	Code Splitting: Route-based chunks for non-critical features
________________________________________
🔐 URL ARCHITECTURE & ROUTING
Professional URL Structure (SEO-Optimized)
Public Routes:
/ (landing page with real trending data)
Authenticated Routes (Username Required):
/{username}/profile (real user data)
Admin Routes:
(real analytics)
________________________________________
Authentication Flow Excellence
1.	Login Success: Real JWT token, redirect to /{username}/profile with real user data
2.	Route Protection: Real JWT validation with backend verification
3.	Deep Linking: Preserve intended destination through real auth flow
4.	Session Management: Real secure token storage with backend refresh
________________________________________
🎯 FINAL DELIVERABLE REQUIREMENTS
Quality Gates (All Must Pass)
✅ ZERO PLACEHOLDER POLICY: Every single piece of data comes from real backend API calls
✅ REAL DATA INTEGRATION: All movies, shows, ratings, reviews are authentic from backend
✅ PRODUCTION BACKEND: Seamless integration with https://backend-app-970m.onrender.com/api
✅ LIVE API CALLS: Every page load makes real HTTP requests and displays live data
✅ AUTHENTIC CONTENT: Real movie posters, descriptions, cast info, ratings from backend
✅ FUNCTIONAL FEATURES: Search, recommendations, user lists all work with real data
✅ PERFORMANCE EXCELLENCE: Sub-2s load times with real API integration
✅ MOBILE PERFECTION: Fixed top/bottom nav with smooth interactions
✅ USERNAME ROUTING: Perfect /{username}/profile implementation with real user data
✅ PRODUCTION READY: Deploy to Vercel and immediately work with existing backend
________________________________________
🚨 FINAL MANDATE
Generate a complete, enterprise-grade codebase that:
1.	MAKES REAL API CALLS: Every single component must fetch actual data from the backend
2.	DISPLAYS REAL CONTENT: Movie titles, posters, descriptions, ratings must all be authentic
3.	WORKS IMMEDIATELY: Can be deployed and used in production without any backend changes
4.	HANDLES REAL DATA: Properly formats and displays actual movie/TV show information
5.	INTEGRATES SEAMLESSLY: Works perfectly with the existing backend API structure
NO PLACEHOLDERS. NO MOCK DATA. NO FAKE CONTENT. ONLY REAL, LIVE, PRODUCTION DATA.
This should be the reference implementation that can immediately replace any existing streaming platform frontend and work flawlessly with real user data and content.