  You are a Principal Frontend Architect at a Fortune 100+ streaming company tasked with building CineScope ‚Äî a premium movie, tv series and anime recommendation platform that must outperform Netflix, Disney+, and HBO Max in user experience, performance, and technical excellence, based on backend/app.py.

## **üö® CRITICAL RULES** ‚ö†Ô∏è
1. **Only 4 JS Files (Global):**
   * `config.js`, `api.js`, `auth.js`, `app.js` are the only global scripts.
   * Page-specific logic/scripts ‚Üí inline inside `.html` files.
2. **Only 6 CSS Files (Global):**
   * No extra `.css` files beyond `main.css`, `components.css`, `layouts.css`, `animations.css`, `responsive.css`, `theme.css`.
   * Page-specific styles ‚Üí inline inside `.html`.
   * simple vercel.json file should be provide 
3. **Zero Placeholder Policy:**
   * No mock, dummy, or static placeholder content.
   * Every component must fetch **live data** from `https://backend-app-970m.onrender.com/api`.
4. **Ultra-Fast API Response:**
   * Must load in `<100ms`.
   * Service Worker caching, retries, and prefetch must be used.
5. **Premium CineScope Standard:**
   * Must **outperform Netflix, Disney+, HBO Max** in performance and UI.
   * All recommendations must be **real ML-powered suggestions from backend**.
   * API should be preloaded for instant response times.
---
## üìÇ Project Structure (Mandatory)
```
frontend/
‚îú‚îÄ‚îÄ index.html                          # Public landing page
‚îú‚îÄ‚îÄ vercel.json                         # Deployment configuration
‚îú‚îÄ‚îÄ auth/                               # Authentication pages
‚îÇ   ‚îú‚îÄ‚îÄ login.html                      # Login form
‚îÇ   ‚îú‚îÄ‚îÄ register.html                   # Registration form
‚îÇ   ‚îî‚îÄ‚îÄ forgot-password.html            # Password recovery
‚îÇ
‚îú‚îÄ‚îÄ content/                            # Content discovery
‚îÇ   ‚îú‚îÄ‚îÄ search.html                     # Global search
‚îÇ   ‚îú‚îÄ‚îÄ details.html                    # Movie/Show details
‚îÇ   ‚îú‚îÄ‚îÄ anime.html                      # Anime category
‚îÇ   ‚îú‚îÄ‚îÄ genre.html                      # Genre browsing
‚îÇ   ‚îú‚îÄ‚îÄ regional.html                   # Regional content
‚îÇ   ‚îî‚îÄ‚îÄ trending.html                   # Trending content
‚îÇ
‚îú‚îÄ‚îÄ user/                               # User-specific pages
‚îÇ   ‚îú‚îÄ‚îÄ profile.html                    # User profile /{username}/profile
‚îÇ   ‚îú‚îÄ‚îÄ watchlist.html                  # Personal watchlist
‚îÇ   ‚îú‚îÄ‚îÄ favorites.html                  # Favorite content
‚îÇ   ‚îú‚îÄ‚îÄ activity.html                   # Watch history
‚îÇ   ‚îî‚îÄ‚îÄ settings.html                   # User preferences AND activity + subscription
‚îÇ
‚îú‚îÄ‚îÄ admin/                              # Admin dashboard
‚îÇ   ‚îú‚îÄ‚îÄ index.html                      # Admin overview
‚îÇ   ‚îú‚îÄ‚îÄ content.html                    # Content management, ML recommendations, Admin post in Telegram
‚îÇ   ‚îú‚îÄ‚îÄ users.html                      # User management
‚îÇ   ‚îî‚îÄ‚îÄ analytics.html                  # Usage analytics
‚îÇ
‚îú‚îÄ‚îÄ components/                         # Reusable widgets
‚îÇ   ‚îú‚îÄ‚îÄ cards/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ content-card.html           # Standard content card
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ card-mini.html           
‚îÇ   ‚îú‚îÄ‚îÄ ui/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ rating-badge.html           # Rating display
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ type-badge.html             # Content type badge
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ genre-chips.html            # Genre tags
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ search-bar.html             # Search component
‚îÇ   ‚îú‚îÄ‚îÄ layout/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ topbar.html                 # Desktop navigation
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ mobile-nav.html             # Mobile bottom nav
‚îÇ   ‚îî‚îÄ‚îÄ modals/
‚îÇ       ‚îú‚îÄ‚îÄ trailer-modal.html          # Video player modal
‚îÇ       ‚îî‚îÄ‚îÄ filter-modal.html           # Advanced filters
‚îÇ
‚îú‚îÄ‚îÄ js/                                 # ‚ö†Ô∏è Only 4 JS files (global)
‚îÇ   ‚îú‚îÄ‚îÄ config.js                       # BASE_URL + API_ENDPOINTS map (no placeholders)
‚îÇ   ‚îú‚îÄ‚îÄ api.js                          # HTTP client, retries, caching, SW hooks, preloading
‚îÇ   ‚îú‚îÄ‚îÄ auth.js                         # JWT auth, refresh, username routing
‚îÇ   ‚îî‚îÄ‚îÄ app.js                          # Router, boot, page controllers, perf marks, Components, carousels, toasts, virtualization
‚îÇ
‚îî‚îÄ‚îÄ css/                                # ‚ö†Ô∏è Only 6 CSS files (global)
    ‚îú‚îÄ‚îÄ main.css                        # Global styles
    ‚îú‚îÄ‚îÄ components.css                  # Component styles
    ‚îú‚îÄ‚îÄ layouts.css                     # Layout-specific styles
    ‚îú‚îÄ‚îÄ animations.css                  # Transitions & keyframes
    ‚îú‚îÄ‚îÄ responsive.css                  # Breakpoints (mobile-first)
    ‚îî‚îÄ‚îÄ theme.css                       # Dark/Light toggle + cinematic tokens
---------------------

üîù Fixed Topbar (Mobile & Desktop)
‚Ä¢	Fixed Position: Always pinned to the top across all breakpoints.
‚Ä¢	Element Order (Left ‚Üí Right):
  o	Logo & Tagline (New Branding):
      <div class="logo">CineBrain</div>
      <div class="tagline">The Mind Behind Your Next Favorite</div>
      ÔÇß	"CineBrain" = Brand identity.
      ÔÇß	"The Mind Behind Your Next Favorite" = Premium AI-driven tagline.
      ÔÇß	Entire block clickable ‚Üí routes to / (landing page).
  o	Search Icon/Input ‚Üí Expands into search bar with real-time backend autocomplete.
  o	User Avatar ‚Üí Real-time avatar (via ui-avatars) that updates with username dynamically.
‚Ä¢	No Zoom Hacks / No CSS Workarounds ‚Üí Must be truly fixed.


## üì± Fixed Bottom Navigation (Mobile Only)
- **Fixed Position**: Always pinned to the bottom of the viewport on mobile.
- **5 Primary Tabs** (with haptic feedback):
  - Home
  - Search
  - Watchlist
  - Favorites
  - Profile
- **Safe Area Handling**: Must adapt perfectly for iPhone 14/15 Pro notches and Android cutouts.
- **Gesture Support**: Swipe navigation + pull-to-refresh + infinite scroll.
------------------------------------
Before generating full pages, always provide the reusable component HTML files first with real-time integration and inline JavaScript inside them.
Component Requirements
‚Ä¢	Each component .html must:
o	Contain fully functional UI + inline <script> (if page-specific logic is needed).
o	Fetch real backend data from https://backend-app-970m.onrender.com/api.
o	Never use placeholders or mock content.
o	Be self-contained (can drop directly into a page and work).
Example Components
‚Ä¢	components/layout/topbar.html
o	Shows logo + tagline (CineBrain ‚Äì The Mind Behind Your Next Favorite).
o	Search input with real-time autocomplete (/search).
o	User avatar with real username (via backend JWT + ui-avatars).
‚Ä¢	components/layout/mobile-nav.html
o	Fixed 5-tab mobile nav (Home, Search, Watchlist, Favorites, Profile).
o	Uses real-time user state (e.g., if logged in ‚Üí show profile pic).
‚Ä¢	components/cards/content-card.html
o	Standard movie/show card.
o	Real poster, title, rating fetched from backend (/recommendations/trending etc).
‚Ä¢	components/ui/rating-badge.html
o	Pulls actual rating (IMDB/Rotten score) from /content/:id.
‚Ä¢	components/modals/trailer-modal.html
o	Autoplays real trailer from backend-provided YouTube/URL.
------------------------------------
## üè† HOMEPAGE (NON-LOGGED USERS)
- **Hero Section**: Show real trending movie, auto-rotate every 5s, backdrop 16:9, play/info/add-to-list buttons, preload images.
-  Trending Section (New Rule Applied):
    ‚Ä¢ Show Trending Movies, Trending TV Series, and Trending Anime (real API).
- **"What's Hot"**: Horizontal scrolling cards with real posters, titles, ratings with real data & local titles.
- **Genres**: Sections for Action, Comedy, Drama, Thriller, Romance, Sci-Fi with lazy loading & trailer preview.
- **Regional Favorites**: Telugu, Hindi, Tamil, Kannada movies with real data & local titles.
- **Critics' Choice**: Premium curated content with real critic scores & reviews with real data & local titles.
- **User Favorites**: Community-driven popular content with real user ratings.
- **Search**: Auto-suggest with posters, real-time results, filters for genre, year, cast, crew with real data & local titles.
- **Theme**: Dark/Light mode toggle, Netflix-inspired design.

## üè† PERSONALIZED HOMEPAGE (LOGGED-IN USERS)
- **Recommended for You**: Real ML-powered suggestions with confidence scores.
- **Personalized recommendations** according to user and Real ML-powered suggestions
- **Because You Liked [X]**: Similar content based on user's past likes.
- **Continue Watching**: Resume from last watched point with real progress.
- **From Your Wishlist**: Show wishlist items with availability and scores.
- **Trending in Your Genres**: Personalized trending based on user preferences.
- **Personalized Hero**: Rotates content from user's favorite genres, adapts to time & behavior.

## üé¨ DETAIL PAGE (ALL USERS)
- **Hero Section**: Real movie data with title, overview, poster, backdrop.
- **Trailer Player**: Real trailers, autoplay logic, adaptive quality, custom controls.
- **Synopsis**: Real overview, plot summary, and warnings.
- **Cast & Crew**: Real actor names, roles, profile images, filmography links.
- **Ratings**: IMDB, Rotten Tomatoes, user reviews, backend composite score.
- **Metadata**: Genres, advisories, 4K/HDR status, release dates.
- **More Like This**: Similar movies section with real discovery.
- **Lists**: Add/remove from Watchlist & Favorites.
- **Reviews**: Real user reviews with spoiler tags and helpful votes.
- **Gallery**: Real posters, stills, and behind-the-scenes images.
---------------------------
## üö® CRITICAL MANDATE: ZERO PLACEHOLDER POLICY

### ABSOLUTE REQUIREMENTS - NO EXCEPTIONS:
- **NO PLACEHOLDER DATA**: Every piece of content must come from real backend API calls
- **NO MOCK DATA**: All movie titles, descriptions, images, ratings must be fetched from https://backend-app-970m.onrender.com/api
- **NO STATIC CONTENT**: Every card, every list, every recommendation must be dynamically populated
- **NO FAKE IMAGES**: All posters, backdrops, and thumbnails must be real URLs from the backend
- **NO DUMMY TEXT**: All descriptions, reviews, cast information must be authentic data
- **REAL-TIME DATA**: Every page load must make actual API calls and display live data
- **PRODUCTION-READY**: The frontend must work seamlessly with the existing backend without any modifications

### BACKEND INTEGRATION REQUIREMENTS:
```javascript
// Real API endpoints from your Flask backend (backend/app.py)
export const API_ENDPOINTS = {
  BASE_URL: 'https://backend-app-970m.onrender.com/api',

  // Content Discovery (real)
  TRENDING: '/recommendations/trending',          // ?type=all|movie|tv&limit=&region=
  NEW_RELEASES: '/recommendations/new-releases',  // ?type=movie|tv&language=&limit=
  TOP_RATED: '/recommendations/critics-choice',   // ?type=movie|tv&limit=
  REGIONAL: '/recommendations/regional',          // append '/:language' + ?type=&limit=
  GENRE_RECS: '/recommendations/genre',           // append '/:genre' + ?type=&limit=
  ANIME: '/recommendations/anime',                // ?genre=&limit=
  ADMIN_CHOICE: '/recommendations/admin-choice',  // public feed of admin picks
  ANONYMOUS_RECS: '/recommendations/anonymous',   // fallback for non-auth users

  // Search & Filtering (real)
  SEARCH: '/search',          // ?query=&type=multi|movie|tv|anime&page=
  // Not implemented in backend: FILTER, AUTOCOMPLETE endpoints
  // We alias AUTOCOMPLETE to SEARCH so UI can reuse it
  FILTER: null,
  AUTOCOMPLETE: '/search',

  // Content Details (real)
  CONTENT_DETAILS: '/content',         // append '/:id' (returns cast, crew, similar_content in one go)
  SIMILAR: '/recommendations/similar', // append '/:id' + ?limit=
  // There are no separate endpoints for these in backend; use CONTENT_DETAILS and transform client-side
  MOVIE_DETAILS: '/content', // append '/:id'
  TV_DETAILS: '/content',    // append '/:id'
  CAST_CREW: '/content',     // append '/:id' (extract cast/crew from response)
  REVIEWS: null,             // backend doesn‚Äôt return reviews in /content

  // User Features (Authenticated; real)
  RECOMMENDATIONS: '/recommendations/personalized',   // GET (requires Bearer token)
  ML_RECOMMENDATIONS: '/recommendations/ml-personalized', // GET (requires Bearer token)
  WATCHLIST: '/user/watchlist',                       // GET (requires Bearer token)
  FAVORITES: '/user/favorites',                       // GET (requires Bearer token)
  // Not implemented in backend:
  WATCH_HISTORY: null,
  USER_RATINGS: '/interactions', // POST to create rating/interaction

  // Authentication (real)
  LOGIN: '/login',       // POST
  REGISTER: '/register', // POST
  // Not implemented in backend:
  REFRESH_TOKEN: null,
  LOGOUT: null,

  // Health (real)
  HEALTH: '/health',
};

-----------------------
## üèÜ SUCCESS METRICS (Non-Negotiable)

### Performance Benchmarks
- **First Contentful Paint**: <1.2s (beat Netflix's 1.8s)
- **Largest Contentful Paint**: <2.1s (beat Disney+'s 2.8s)
- **Time to Interactive**: <2.5s (beat HBO Max's 3.2s)
- **Core Web Vitals**: 100% green scores
- **Lighthouse Performance**: ‚â•95 across all pages
- **API Response Time**: <100ms with preloading

### User Experience Standards
- Zero placeholder content - every component must be production-ready with real data
- Sub-200ms interaction responses - faster than human perception threshold
- Buttery smooth 60fps animations on all devices
- One-tap navigation - maximum 2 taps to reach any content
- Instant search results with <100ms autocomplete using real backend data
------------------------
## üé® CINEMATIC DESIGN PHILOSOPHY

### Brand Identity: "Premium IMAX Experience"
Create the digital equivalent of a luxury cinema experience - sophisticated, immersive, and premium.

### Color Psychology & Hierarchy
```css
/* Tier 1: Foundation (Premium Black) */
--cinema-black: #0a0a0b;        /* Main backgrounds - conveys luxury */
--theater-dark: #141418;         /* Card surfaces - premium feel */
--velvet-dark: #1e1e23;          /* Elevated content - sophisticated */

/* Tier 2: Premium Accents */
--platinum-blue: #3b82f6;        /* Trust & reliability */
--royal-purple: #8b5cf6;         /* Exclusivity & premium */
--vip-gold: #f59e0b;            /* Premium features & highlights */

/* Tier 3: Content Hierarchy */
--hero-gradient: linear-gradient(135deg, #3b82f6 0%, #8b5cf6 50%, #1e1e23 100%);
--premium-glow: 0 0 30px rgba(139, 92, 246, 0.3);
--interactive-pulse: 0 0 20px rgba(59, 130, 246, 0.4);
Brand Identity Update:
  Use CineBrain logo + tagline consistently in topbar and landing hero.
  The tagline reinforces AI-powered intelligence and curation-first philosophy.
  Other color tokens, typography, visual hierarchy rules remain unchanged.

---------------------------

### Visual Hierarchy Rules
1. **Hero Content**: Cinematic 16:9 ratio with subtle parallax
2. **Content Cards**: Sharp corners (4px), premium shadows, hover scaling (1.03x)
3. **Typography**: Ultra-clean hierarchy with perfect contrast ratios
4. **Micro-interactions**: Sophisticated 0.2s cubic-bezier(0.4, 0, 0.2, 1) transitions

---------------------------

## üì± MOBILE-FIRST ARCHITECTURE

### Fixed Navigation System (Critical Requirement)
- **Top Bar (Fixed)**: Search, profile, notifications - always accessible
- **Bottom Navigation (Fixed)**: 5 primary tabs with haptic feedback
- **Safe Area Handling**: Perfect iPhone 14/15 Pro notch adaptation
- **Gesture Support**: Swipe navigation, pull-to-refresh, infinite scroll

### Responsive Breakpoints (Performance Optimized)
```css
/* Mobile-First Strategy */
@media (max-width: 575px)   { /* Mobile: Optimized for thumb navigation */ }
@media (min-width: 576px)   { /* Large Mobile: Enhanced touch targets */ }
@media (min-width: 768px)   { /* Tablet: Hybrid touch/cursor interface */ }
@media (min-width: 992px)   { /* Desktop: Full-featured experience */ }
@media (min-width: 1400px)  { /* Ultra-wide: Cinematic layouts */ }

---

## ‚ö° PERFORMANCE ARCHITECTURE

### 4-File JavaScript Strategy (Mandatory)
```javascript
// 1. config.js (50KB) - App configuration & API endpoints with preloading
// 2. api.js (75KB) - HTTP client, real backend integration, caching, preloading
// 3. auth.js (60KB) - Real authentication with backend JWT
// 4. app.js (120KB) - All UI components + main application logic with real data binding
// Total Bundle: ~305KB (compressed: ~80KB with Brotli)
// Preload Strategy: All 4 files + critical API data loaded in parallel during initial paint
------------------------
### Critical Performance Optimizations
- **Preload Critical Resources**: All 4 JS files + critical CSS + API data
- **Image Optimization**: Real backend image URLs with WebP/AVIF lazy loading
- **API Response Caching**: Real backend data cached for 30s dynamic, 24h static
- **Service Worker**: Aggressive caching of real API responses with preloading
- **Code Splitting**: Route-based chunks for non-critical features
- **API Preloading**: Critical endpoints preloaded for <100ms response times
------------------------

## üîê URL ARCHITECTURE & ROUTING

### Professional URL Structure (SEO-Optimized)
**Public Routes:**
- `/` (landing page with real trending data)

**Authenticated Routes (Username Required):**
- `/{username}/profile` (real user data)

**Admin Routes:**
- `/admin/analytics` (real analytics)

### Authentication Flow Excellence
1. **Login Success**: Real JWT token, redirect to `/{username}/profile` with real user data
2. **Route Protection**: Real JWT validation with backend verification
3. **Deep Linking**: Preserve intended destination through real auth flow
4. **Session Management**: Real secure token storage with backend refresh

---

## üéØ FINAL DELIVERABLE REQUIREMENTS

### Quality Gates (All Must Pass)
- ‚úÖ **ZERO PLACEHOLDER POLICY**: Every single piece of data comes from real backend API calls
- ‚úÖ **REAL DATA INTEGRATION**: All movies, shows, ratings, reviews are authentic from backend
- ‚úÖ **PRODUCTION BACKEND**: Seamless integration with https://backend-app-970m.onrender.com/api
- ‚úÖ **LIVE API CALLS**: Every page load makes real HTTP requests and displays live data
- ‚úÖ **AUTHENTIC CONTENT**: Real movie posters, descriptions, cast info, ratings from backend
- ‚úÖ **FUNCTIONAL FEATURES**: Search, recommendations, user lists all work with real data
- ‚úÖ **PERFORMANCE EXCELLENCE**: Sub-2s load times with real API integration
- ‚úÖ **MOBILE PERFECTION**: Fixed top/bottom nav with smooth interactions
- ‚úÖ **USERNAME ROUTING**: Perfect `/{username}/profile` implementation with real user data
- ‚úÖ **PRODUCTION READY**: Deploy to Vercel and immediately work with existing backend
- ‚úÖ **API PRELOADING**: Critical data preloaded for <100ms response times
- ‚úÖ **4 JS FILES ONLY**: No additional global scripts beyond the mandatory 4
- ‚úÖ **6 CSS FILES ONLY**: No additional global stylesheets beyond the mandatory 6

---

## üö® FINAL MANDATE

Generate a complete, enterprise-grade codebase that:

1. **MAKES REAL API CALLS**: Every single component must fetch actual data from the backend
2. **DISPLAYS REAL CONTENT**: Movie titles, posters, descriptions, ratings must all be authentic
3. **WORKS IMMEDIATELY**: Can be deployed and used in production without any backend changes
4. **HANDLES REAL DATA**: Properly formats and displays actual movie/TV show information
5. **INTEGRATES SEAMLESSLY**: Works perfectly with the existing backend API structure
6. **PRELOADS CRITICAL DATA**: API responses must be <100ms through intelligent preloading
7. **FOLLOWS FILE LIMITS**: Strictly adheres to 4 JS files and 6 CSS files maximum
8. **INLINE PAGE LOGIC**: All page-specific scripts and styles must be inline in HTML files

**NO PLACEHOLDERS. NO MOCK DATA. NO FAKE CONTENT. NO EXTRA FILES. ONLY REAL, LIVE, PRODUCTION DATA WITH PRELOADED API RESPONSES.**
This should be the reference implementation that can immediately replace any existing streaming platform frontend and work flawlessly with real user data and content.