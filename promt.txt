povide the best promt for production-grade prompt you can use to generate the best possible design + code with top UI/UX for CineScope frontend

You are a Senior Frontend Engineer and UI/UX Designer.
Your task is to produce a complete, production-ready CineScope frontend codebase that integrates with the Flask backend (backend/app.py).________________________________________
üéØ Goal
Build a pure HTML/CSS/JS frontend that:
‚Ä¢ Consumes the provided Flask API (/api/...)
‚Ä¢ Deploys as a static site (Vercel-ready) with clean URLs (no .html)
‚Ä¢ Uses fixed desktop topbar and fixed mobile bottom nav
‚Ä¢ Mobile-first responsive design
‚Ä¢ Uses only 5 global JS files (all page-specific JS must be inline)
‚Ä¢ Fully production-ready: no placeholders, no dummy data
‚Ä¢ Applies a Cinematic Dark Theme with blue + purple highlights for a premium, immersive look
‚Ä¢ After login, the URL must include the username in the route
‚Üí Example: https://frontendmov.vercel.app/<username>/profile
________________________________________
üé® Cinematic Dark Theme (Design System)
Concept: Dark theme to evoke the feel of a movie theater ‚Äî posters, trailers, and media pop against the dark background.
‚Ä¢ Primary Base: Deep charcoal / near-black backgrounds (#0d0d0f, #121212)
‚Ä¢ Primary Accent (Blue): #2563eb (Tailwind blue-600) ‚Üí symbolizes rarity, peace, and calmness
‚Ä¢ Secondary Accent (Purple): #9333ea (Tailwind purple-600) ‚Üí evokes royalty, luxury, and cinematic depth
‚Ä¢ Text:
o Primary text: #f9f9f9 (white 95%)
o Secondary/muted: #b3b3b3
‚Ä¢ Surfaces / Cards: #1a1a1d background with subtle shadow/glow
‚Ä¢ Hover / Active states: blend of blue ‚Üí purple gradients (linear-gradient 90deg, #2563eb ‚Üí #9333ea)
‚Ä¢ UI examples:
o topbar background ‚Üí dark with glowing blue-purple highlights on active items
o Mobile bottom nav ‚Üí dark with blue icons, purple on active
o Buttons ‚Üí gradient from blue ‚Üí purple with hover glow
o Badges/labels ‚Üí pill shape with blue or purple fill
This theme must be applied globally across layouts, cards, badges, toasts, and navs.
________________________________________
‚öôÔ∏è Tech Stack & Rules
‚Ä¢ Stack: HTML5, CSS3, Bootstrap 5, Tailwind (via CDN, prefixed tw-), vanilla JavaScript only
‚Ä¢ ‚úÖ Exactly 5 global JS files under /js:
    config.js
    storage.js
    http.js
    ui.js
    app.js
‚Ä¢ All page-specific logic inline at the bottom of each HTML file
‚Ä¢ Fixed topbar (desktop ‚â• 992px) and fixed bottom nav (mobile < 992px)
‚Ä¢ Safe areas respected using env(safe-area-inset-*)
‚Ä¢ Viewport locked (maximum-scale=1, no zoom)
‚Ä¢ Touch-optimized (touch-action: manipulation)
‚Ä¢ Lazy loading images (loading="lazy")
‚Ä¢ Accessibility: semantic HTML, ARIA labels, keyboard focus visible
________________________________________
üöÄ Deployment & Routing
‚Ä¢ Deploy on Vercel
‚Ä¢ Clean URLs (cleanUrls: true) ‚Üí no .html in routes
‚Ä¢ Redirect /index.html ‚Üí /
‚Ä¢ /api defaults to relative path (reverse proxy supported)
‚Ä¢ User-specific routes must work (e.g., /:username/profile, /:username/watchlist)
‚Ä¢ Provide vercel.json exactly as defined in the spec

const API_BASE = 'https://backend-app-970m.onrender.com/api';

________________________________________
üìÇ Project Structure
frontend/
‚îú‚îÄ‚îÄ index.html
‚îÇ
‚îú‚îÄ‚îÄ auth/
‚îÇ   ‚îú‚îÄ‚îÄ login.html
‚îÇ   ‚îî‚îÄ‚îÄ register.html
‚îÇ
‚îú‚îÄ‚îÄ content/
‚îÇ   ‚îú‚îÄ‚îÄ search.html
‚îÇ   ‚îú‚îÄ‚îÄ details.html
‚îÇ   ‚îú‚îÄ‚îÄ anime.html
‚îÇ   ‚îú‚îÄ‚îÄ genre.html
‚îÇ   ‚îî‚îÄ‚îÄ regional.html
‚îÇ
‚îú‚îÄ‚îÄ user/
‚îÇ   ‚îú‚îÄ‚îÄ watchlist.html
‚îÇ   ‚îú‚îÄ‚îÄ favorites.html
‚îÇ   ‚îú‚îÄ‚îÄ settings.html
‚îÇ   ‚îú‚îÄ‚îÄ activity.html
‚îÇ   ‚îî‚îÄ‚îÄ profile.html
‚îÇ
‚îú‚îÄ‚îÄ admin/
‚îÇ   ‚îú‚îÄ‚îÄ index.html
‚îÇ   ‚îú‚îÄ‚îÄ search.html
‚îÇ   ‚îú‚îÄ‚îÄ recommendations.html
‚îÇ   ‚îú‚îÄ‚îÄ analytics.html
‚îÇ   ‚îî‚îÄ‚îÄ ml.html
‚îÇ
‚îú‚îÄ‚îÄ widgets/
‚îÇ   ‚îú‚îÄ‚îÄ content-card.html
‚îÇ   ‚îú‚îÄ‚îÄ content-card-anime.html
‚îÇ   ‚îú‚îÄ‚îÄ card-mini.html
‚îÇ   ‚îú‚îÄ‚îÄ rating-badge.html
‚îÇ   ‚îú‚îÄ‚îÄ type-badge.html
‚îÇ   ‚îú‚îÄ‚îÄ chips-genre.html
‚îÇ   ‚îú‚îÄ‚îÄ chips-language.html
‚îÇ   ‚îú‚îÄ‚îÄ search-bar.html
‚îÇ   ‚îú‚îÄ‚îÄ pagination.html
‚îÇ   ‚îú‚îÄ‚îÄ trailer-modal.html
‚îÇ   ‚îú‚îÄ‚îÄ toast-container.html
‚îÇ   ‚îú‚îÄ‚îÄ skeleton-card.html
‚îÇ   ‚îú‚îÄ‚îÄ skeleton-grid.html
‚îÇ   ‚îî‚îÄ‚îÄ admin-kpi-tile.html
‚îÇ
‚îú‚îÄ‚îÄ layouts/
‚îÇ   ‚îú‚îÄ‚îÄ mobile-nav.html
‚îÇ   ‚îú‚îÄ‚îÄ topbar.html
‚îÇ   ‚îú‚îÄ‚îÄ offcanvas-filters.html
‚îÇ   ‚îî‚îÄ‚îÄ container.html
‚îÇ
‚îú‚îÄ‚îÄ css/
‚îÇ   ‚îú‚îÄ‚îÄ base.css
‚îÇ   ‚îú‚îÄ‚îÄ bootstrap-overrides.css
‚îÇ   ‚îú‚îÄ‚îÄ Tailwind.css
‚îÇ   ‚îú‚îÄ‚îÄ animation.css
‚îÇ   ‚îú‚îÄ‚îÄ responsive.css
‚îÇ   ‚îî‚îÄ‚îÄ utilities.css
‚îÇ
‚îú‚îÄ‚îÄ js/
‚îÇ   ‚îú‚îÄ‚îÄ config.js
‚îÇ   ‚îú‚îÄ‚îÄ app.js
‚îÇ   ‚îú‚îÄ‚îÄ http.js
‚îÇ   ‚îú‚îÄ‚îÄ storage.js
‚îÇ   ‚îî‚îÄ‚îÄ ui.js
‚îÇ
‚îú‚îÄ‚îÄ vercel.json
‚îî‚îÄ‚îÄ README.md
________________________________________
üõ†Ô∏è Global JS Responsibilities
‚Ä¢	config.js ‚Üí API base, Tailwind prefix
‚Ä¢	storage.js ‚Üí localStorage/sessionStorage for token + user
‚Ä¢	http.js ‚Üí api.get/post with token handling
‚Ä¢	ui.js ‚Üí reusable UI (cards, grids, toast, trailer modal)
‚Ä¢	app.js ‚Üí layout injection, guards (auth/admin), event hooks
________________________________________
‚úÖ Acceptance Checklist
‚Ä¢  No .html in URLs (cleanUrls true)
‚Ä¢  Fixed bars (desktop topbar, mobile bottom nav)
‚Ä¢  Safe-area padding respected
‚Ä¢  5 global JS files only
‚Ä¢  Inline page-specific JS per page
‚Ä¢  Uses backend API directly (/api/...)
‚Ä¢  Deploys on Vercel with zero edits required
‚Ä¢  Usernames must appear in the URL after login (/:username/profile)
________________________________________
üì¶ Output
‚Ä¢	Generate all files and folders exactly as specified
‚Ä¢	Fill HTMLs with working markup, inline JS calling real /api endpoints
‚Ä¢	Implement base.css, animation.css, utilities, and responsive rules
‚Ä¢	Implement all 5 global JS files with correct logic
‚Ä¢	Provide vercel.json from the spec
‚Ä¢	Under Goal (explicit login behavior)
‚Ä¢	Under Deployment & Routing (so Vercel routing handles /username/...)
‚Ä¢	In Acceptance Checklist (final validation)