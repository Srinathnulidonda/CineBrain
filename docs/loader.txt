1. loader.css

/* CineBrain Loading Animation */
:root {
    --loader-bg-dark: linear-gradient(135deg, #0f0f0f 0%, #1a1a1a 50%, #0f0f0f 100%);
    --loader-bg-light: linear-gradient(135deg, #ffffff 0%, #f5f5f5 50%, #ffffff 100%);
    --loader-text-dark: #ffffff;
    --loader-text-light: #1a1a1a;
    --loader-tagline-dark: #a0a0a0;
    --loader-tagline-light: #666666;
    --loader-progress-bg-dark: rgba(255, 255, 255, 0.1);
    --loader-progress-bg-light: rgba(0, 0, 0, 0.1);
    --loader-progress-fill-dark: #ffffff;
    --loader-progress-fill-light: #1a1a1a;
    --loader-particle-dark: rgba(255, 255, 255, 0.1);
    --loader-particle-light: rgba(0, 0, 0, 0.05);
}

/* Dark theme (default) */
[data-theme="dark"] .loader-overlay,
.loader-overlay {
    --loader-bg: var(--loader-bg-dark);
    --loader-text: var(--loader-text-dark);
    --loader-tagline: var(--loader-tagline-dark);
    --loader-progress-bg: var(--loader-progress-bg-dark);
    --loader-progress-fill: var(--loader-progress-fill-dark);
    --loader-particle: var(--loader-particle-dark);
}

/* Light theme */
[data-theme="light"] .loader-overlay {
    --loader-bg: var(--loader-bg-light);
    --loader-text: var(--loader-text-light);
    --loader-tagline: var(--loader-tagline-light);
    --loader-progress-bg: var(--loader-progress-bg-light);
    --loader-progress-fill: var(--loader-progress-fill-light);
    --loader-particle: var(--loader-particle-light);
}

.loader-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--loader-bg);
    z-index: 10000;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: opacity 0.6s ease-out, visibility 0.6s ease-out;
    visibility: visible;
    opacity: 1;
}

.loader-overlay.fade-out {
    opacity: 0;
    visibility: hidden;
}

.loader-overlay.hidden {
    display: none;
}

.loading-container {
    text-align: center;
    position: relative;
    z-index: 10;
    padding: clamp(20px, 5vw, 40px);
    width: 100%;
    max-width: 600px;
}

/* Responsive brand logo with CineBrain styling */
.loader-brand {
    font-family: 'Bangers', cursive;
    font-size: clamp(2rem, 10vw, 5rem);
    font-weight: 700;
    margin-bottom: clamp(0.3rem, 1vw, 0.5rem);
    letter-spacing: clamp(1px, 0.2vw, 2px);
    animation: brandFade 3s ease-in-out infinite;
    background: linear-gradient(135deg, #E50914 0%, #0073E6 50%, #8B5CF6 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-shadow: 0 2px 20px rgba(229, 9, 20, 0.3);
    line-height: 1.2;
}

/* Responsive tagline */
.loader-tagline {
    font-size: clamp(0.75rem, 3vw, 1.25rem);
    font-weight: 400;
    color: var(--loader-tagline);
    margin-bottom: clamp(2rem, 6vw, 3rem);
    letter-spacing: clamp(0.3px, 0.1vw, 0.8px);
    animation: taglineFade 3s ease-in-out 0.5s infinite;
    font-family: 'Inter', sans-serif;
}

/* FIXED: Loading elements container - Proper desktop alignment */
.loading-elements {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: clamp(1.2rem, 3vw, 2rem);
    margin-bottom: clamp(1.5rem, 4vw, 2rem);
    flex-direction: column;
    /* Default: stack vertically */
}

/* Cinema Reel Icon - Perfect for CineBrain movie platform */
.cinema-icon {
    width: clamp(32px, 8vw, 48px);
    height: clamp(32px, 8vw, 48px);
    opacity: 0.9;
    animation: cinemaReelSpin 3s linear infinite;
    flex-shrink: 0;
    display: flex;
    align-items: center;
    justify-content: center;
}

.cinema-icon svg {
    width: 100%;
    height: 100%;
}

.cinema-icon path,
.cinema-icon circle {
    fill: var(--loader-text);
    opacity: 0.9;
}

/* Responsive progress bar */
.progress-bar {
    width: clamp(160px, 40vw, 280px);
    height: clamp(3px, 0.8vw, 5px);
    background: var(--loader-progress-bg);
    border-radius: 3px;
    overflow: hidden;
    position: relative;
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.2);
}

.progress-fill {
    height: 100%;
    background: linear-gradient(90deg,
            transparent 0%,
            var(--loader-progress-fill) 30%,
            var(--loader-progress-fill) 70%,
            transparent 100%);
    width: 40%;
    animation: progressSlide 2.5s ease-in-out infinite;
    border-radius: 3px;
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.3);
}

/* Responsive loading text */
.loading-text {
    font-size: clamp(0.8rem, 2.8vw, 1.1rem);
    font-weight: 600;
    color: var(--loader-tagline);
    letter-spacing: clamp(1px, 0.4vw, 3px);
    animation: loadingTextFade 2s ease-in-out infinite;
    font-family: 'Inter', sans-serif;
    text-transform: uppercase;
    margin-top: clamp(0.5rem, 2vw, 1rem);
}

/* Particles container */
.particles {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1;
    overflow: hidden;
}

.particle {
    position: absolute;
    width: clamp(1px, 0.4vw, 4px);
    height: clamp(1px, 0.4vw, 4px);
    background: var(--loader-particle);
    border-radius: 50%;
    animation: particleFloat 10s linear infinite;
}

/* Vignette effect */
.vignette {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle, transparent 30%, rgba(0, 0, 0, 0.4) 100%);
    pointer-events: none;
    z-index: 5;
}

/* Animations */
@keyframes brandFade {

    0%,
    100% {
        opacity: 1;
        transform: translateY(0) scale(1);
    }

    50% {
        opacity: 0.95;
        transform: translateY(-3px) scale(1.02);
    }
}

@keyframes taglineFade {

    0%,
    100% {
        opacity: 0.7;
    }

    50% {
        opacity: 1;
    }
}

/* Cinema reel spinning animation - Perfect for movie platform */
@keyframes cinemaReelSpin {
    0% {
        transform: rotate(0deg) scale(1);
        opacity: 0.9;
    }

    25% {
        transform: rotate(90deg) scale(1.05);
        opacity: 1;
    }

    50% {
        transform: rotate(180deg) scale(1);
        opacity: 0.95;
    }

    75% {
        transform: rotate(270deg) scale(1.05);
        opacity: 1;
    }

    100% {
        transform: rotate(360deg) scale(1);
        opacity: 0.9;
    }
}

@keyframes progressSlide {
    0% {
        transform: translateX(-100%);
        opacity: 0.5;
    }

    50% {
        opacity: 1;
    }

    100% {
        transform: translateX(350%);
        opacity: 0.5;
    }
}

@keyframes loadingTextFade {

    0%,
    100% {
        opacity: 0.6;
        transform: scale(1);
    }

    50% {
        opacity: 1;
        transform: scale(1.02);
    }
}

@keyframes particleFloat {
    0% {
        transform: translateY(100vh) rotate(0deg);
        opacity: 0;
    }

    10% {
        opacity: 0.3;
    }

    90% {
        opacity: 0.3;
    }

    100% {
        transform: translateY(-100px) rotate(360deg);
        opacity: 0;
    }
}

/* Mobile specific adjustments - Keep stacked vertically */
@media (max-width: 480px) {
    .loading-elements {
        flex-direction: column;
        gap: clamp(1.5rem, 5vw, 2rem);
    }

    .progress-bar {
        width: clamp(140px, 70vw, 220px);
        height: 4px;
    }

    .loader-brand {
        font-size: clamp(1.8rem, 14vw, 3rem);
    }

    .loader-tagline {
        font-size: clamp(0.7rem, 4vw, 1rem);
    }

    .cinema-icon {
        width: clamp(36px, 12vw, 44px);
        height: clamp(36px, 12vw, 44px);
    }
}

/* Tablet adjustments - Keep stacked */
@media (min-width: 481px) and (max-width: 768px) {
    .loading-elements {
        flex-direction: column;
        gap: clamp(1.8rem, 4vw, 2.2rem);
    }

    .loader-brand {
        font-size: clamp(2.5rem, 9vw, 4rem);
    }

    .loader-tagline {
        font-size: clamp(1rem, 3vw, 1.2rem);
    }

    .cinema-icon {
        width: 42px;
        height: 42px;
    }

    .progress-bar {
        width: 240px;
        height: 4px;
    }
}

/* Desktop adjustments - FIXED: Keep stacked for better visual hierarchy */
@media (min-width: 769px) {
    .loading-elements {
        flex-direction: column;
        /* Keep vertical stack on desktop too */
        gap: 2rem;
    }

    .loader-brand {
        font-size: clamp(3.5rem, 7vw, 5.5rem);
    }

    .loader-tagline {
        font-size: clamp(1.1rem, 2vw, 1.4rem);
    }

    .cinema-icon {
        width: 48px;
        height: 48px;
    }

    .progress-bar {
        width: 280px;
        height: 5px;
    }

    .loading-text {
        font-size: 1.1rem;
        letter-spacing: 3px;
    }
}

/* Large desktop adjustments */
@media (min-width: 1200px) {
    .cinema-icon {
        width: 52px;
        height: 52px;
    }

    .progress-bar {
        width: 320px;
    }
}

/* Landscape mode adjustments */
@media (orientation: landscape) and (max-height: 500px) {
    .loader-brand {
        font-size: clamp(1.8rem, 10vh, 2.8rem);
    }

    .loader-tagline {
        font-size: clamp(0.7rem, 4vh, 1rem);
        margin-bottom: 1.5rem;
    }

    .loading-elements {
        margin-bottom: 1rem;
        gap: 1.5rem;
    }

    .cinema-icon {
        width: 32px;
        height: 32px;
    }

    .progress-bar {
        width: 200px;
        height: 3px;
    }
}

/* Ultra small devices */
@media (max-width: 320px) {
    .loader-brand {
        font-size: 1.6rem;
    }

    .loader-tagline {
        font-size: 0.65rem;
    }

    .cinema-icon {
        width: 28px;
        height: 28px;
    }

    .progress-bar {
        width: 120px;
        height: 3px;
    }

    .loading-text {
        font-size: 0.75rem;
    }
}




2. loader.js // CineBrain Loader Component

class CineBrainLoader {
    constructor() {
        this.loaderElement=null;
        this.loadingTexts=['LOADING',
        'ANALYZING',
        'CURATING',
        'THINKING'];
        this.textInterval=null;
        this.minLoadTime=1500;
        this.startTime=Date.now();
        this.contentLoaded=false;
        this.init();
    }

    init() {
        this.createLoader();
        this.createParticles();
        this.animateLoadingText();
        this.trackContentLoading();
    }

    createLoader() {
        const loaderHTML=` <div class="loader-overlay" id="cinebrain-loader"><div class="particles"></div><div class="vignette"></div><div class="loading-container"><h1 class="loader-brand">CineBrain</h1><p class="loader-tagline">The Mind Behind Your Next Favorite</p><div class="loading-elements">< !-- Perfect CineBrain Icon: Film Projector with Brain Elements --> <div class="cinema-icon" > <svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" > < !-- Projector Body --> <rect x="2" y="8" width="12" height="8" rx="2" fill="currentColor" opacity="0.9" /> < !-- Projector Lens --> <circle cx="16" cy="12" r="4" fill="none" stroke="currentColor" stroke-width="1.5" /> <circle cx="16" cy="12" r="2.5" fill="currentColor" opacity="0.7" /> <circle cx="16" cy="12" r="1" fill="currentColor" /> < !-- Film Reels (Brain-like) --> <circle cx="5" cy="5" r="2.5" fill="none" stroke="currentColor" stroke-width="1" /> <circle cx="11" cy="5" r="2.5" fill="none" stroke="currentColor" stroke-width="1" /> < !-- Film connecting reels --> <path d="M7.5 5 L8.5 5" stroke="currentColor" stroke-width="1" /> <path d="M5 7.5 L5 8" stroke="currentColor" stroke-width="1" /> <path d="M11 7.5 L11 8" stroke="currentColor" stroke-width="1" /> < !-- Brain-like patterns in reels --> <path d="M4 4.5 Q5 3.5 6 4.5" fill="none" stroke="currentColor" stroke-width="0.5" opacity="0.6" /> <path d="M10 4.5 Q11 3.5 12 4.5" fill="none" stroke="currentColor" stroke-width="0.5" opacity="0.6" /> < !-- Projection beam --> <path d="M20 12 L22 10 L22 14 Z" fill="currentColor" opacity="0.5" /> < !-- Control knobs --> <circle cx="4" cy="10" r="0.5" fill="currentColor" /> <circle cx="6" cy="10" r="0.5" fill="currentColor" /> < !-- Lens details --> <circle cx="16" cy="12" r="3.5" fill="none" stroke="currentColor" stroke-width="0.5" opacity="0.4" /> </svg> </div> <div class="progress-bar" > <div class="progress-fill" ></div> </div> </div> <div class="loading-text" >LOADING</div> </div> </div> `;

        document.body.insertAdjacentHTML('afterbegin', loaderHTML);
        this.loaderElement=document.getElementById('cinebrain-loader');
    }

    createParticles() {
        const particlesContainer=this.loaderElement.querySelector('.particles');
        const particleCount=window.innerWidth <=768 ? 30: 60;

        for (let i=0; i < particleCount; i++) {
            const particle=document.createElement('div');
            particle.className='particle';
            particle.style.left=Math.random() * 100+'%';
            particle.style.animationDelay=Math.random() * 10+'s';
            particle.style.animationDuration=(Math.random() * 6 + 8)+'s';
            particlesContainer.appendChild(particle);
        }
    }

    animateLoadingText() {
        const loadingText=this.loaderElement.querySelector('.loading-text');
        let currentIndex=0;

        this.textInterval=setInterval(()=> {
                loadingText.style.opacity='0';
                loadingText.style.transform='scale(0.95)';

                setTimeout(()=> {
                        currentIndex=(currentIndex + 1) % this.loadingTexts.length;
                        loadingText.textContent=this.loadingTexts[currentIndex];
                        loadingText.style.opacity='1';
                        loadingText.style.transform='scale(1)';
                    }

                    , 300);
            }

            , 2800);
    }

    trackContentLoading() {
        window.addEventListener('contentCardsReady', ()=> {
                this.contentLoaded=true;
                this.checkHideLoader();
            });

        setTimeout(()=> {
                const hasContent=document.querySelector('.content-card');

                if (hasContent) {
                    this.contentLoaded=true;
                    this.checkHideLoader();
                }
            }

            , 100);

        setTimeout(()=> {
                this.hideLoader();
            }

            , 10000);
    }

    checkHideLoader() {
        const elapsed=Date.now() - this.startTime;
        const remainingTime=Math.max(0, this.minLoadTime - elapsed);

        setTimeout(()=> {
                this.hideLoader();
            }

            , remainingTime);
    }

    hideLoader() {
        if ( !this.loaderElement) return;

        if (this.textInterval) {
            clearInterval(this.textInterval);
        }

        this.loaderElement.classList.add('fade-out');

        setTimeout(()=> {
                this.loaderElement.classList.add('hidden');

                setTimeout(()=> {
                        this.loaderElement.remove();
                    }

                    , 100);
            }

            , 600);

        window.dispatchEvent(new Event('loaderHidden'));
    }

    forceHide() {
        this.hideLoader();
    }
}

const cineBrainLoader=new CineBrainLoader();
window.cineBrainLoader=cineBrainLoader;